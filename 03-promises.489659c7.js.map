{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,sBAC/BI,IAAKL,SAASC,cAAc,kBAK9B,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACF,WAAUL,UAEnBQ,EAAO,CAACH,WAAUL,YAEnBA,MAXPJ,EAAKC,KAAKe,iBAAiB,UAe3B,SAAsBC,GACpBA,EAAMC,iBAIN,IAHA,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OAC1BhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OACvBC,EAAI,EAAGA,GAAKhB,EAAQgB,IAAK,CAEhCd,EADec,EACSH,GACrBI,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUL,EAAKoB,EAALpB,MACjBN,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANvB,EAAM,MAAK,CAC9DwB,QAAO,SAIZC,OAAM,SAAAL,G,IAAGf,EAAQe,EAARf,SAAUL,EAAKoB,EAALpB,MAClBN,EAAA2B,OAAOK,QAAQ,sBAAqCH,OAAflB,EAAS,QAAYkB,OAANvB,EAAM,MAAK,CAC7DwB,QAAS,SAIfT,GAASd,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"input[name=delay]\"),\n  step: document.querySelector(\"input[name=step]\"),\n  amount: document.querySelector(\"input[name=amount]\"),\n  btn: document.querySelector(\"[type=submit]\")\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  })\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n  for (let i = 1; i <= amount; i++) {\n    let position = i; \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 7000,\n          // ...\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 7000,\n          // ...\n        });\n      });\n    delay += step;\n  }\n}\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","btn","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","i","then","param","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.489659c7.js.map"}