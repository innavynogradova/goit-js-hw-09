{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAYA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,YAEnBA,MAnBPO,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BV,MAAOS,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,IAAKJ,SAASC,cAAc,kBAG9BH,KAAKC,KAAKM,iBAAiB,UAe3B,SAAsBC,GACpBA,EAAMC,iBAIN,IAHA,IAAIC,EAAQC,OAAOX,KAAKP,MAAMmB,OAC1BR,EAAOO,OAAOX,KAAKI,KAAKQ,OACxBP,EAASM,OAAOX,KAAKK,OAAOO,OACvBC,EAAI,EAAGA,GAAKR,EAAQQ,IAAK,CAEhCtB,EADesB,EACSH,GACrBI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAC9D0B,QAAO,SAIZC,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBJ,EAAA2B,OAAOK,QAAQ,sBAAqCH,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAC7D0B,QAAS,SAIfT,GAASN,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"input[name=delay]\"),\n  step: document.querySelector(\"input[name=step]\"),\n  amount: document.querySelector(\"input[name=amount]\"),\n  btn: document.querySelector(\"[type=submit]\")\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  })\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n  for (let i = 1; i <= amount; i++) {\n    let position = i; \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 7000,\n          // ...\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 7000,\n          // ...\n        });\n      });\n    delay += step;\n  }\n}\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","refs","form","document","querySelector","step","amount","btn","addEventListener","event","preventDefault","delay1","Number","value","i","then","param","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.7b4b28da.js.map"}